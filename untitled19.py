# -*- coding: utf-8 -*-
"""Untitled19.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1suaesKd_F57ny1q3uApwkZ4SUgQfnh5d
"""

# import module
import pandas as pd

# Creating our dataset
df = pd.DataFrame([[9, 4, 8, 9],
                   [8, 10, 7, 6],
                   [7, 6, 8, 5]],
                  columns=['Maths',  'English',
                           'Science', 'History'])

# display dataset
print(df)

df.sum()

df.describe()

df.agg(['sum', 'min', 'max'])

df.groupby(by=['Maths'])

a = df.groupby('Maths')
a.first()

b = df.groupby(['Maths', 'Science'])
b.first()

import pandas as pd
from datetime import datetime
import numpy as np

range_date = pd.date_range(start ='1/1/2019', end ='1/08/2019', freq ='Min')
print(range_date)

import pandas as pd
from datetime import datetime
import numpy as np

range_date = pd.date_range(start ='1/1/2019', end ='1/08/2019', freq ='Min')
print(type(range_date[110]))

import pandas as pd
from datetime import datetime
import numpy as np

range_date = pd.date_range(start ='1/1/2019', end ='1/08/2019',freq ='Min')
df = pd.DataFrame(range_date, columns =['date'])
df['data'] = np.random.randint(0, 100, size =(len(range_date)))

print(df.head(10))

import pandas as pd
from datetime import datetime
import numpy as np

range_date = pd.date_range(start ='1/1/2019', end ='1/08/2019',freq ='Min')

df = pd.DataFrame(range_date, columns =['date'])
df['data'] = np.random.randint(0, 100, size =(len(range_date)))

string_data = [str(x) for x in range_date]
print(string_data[1:11])

import pandas as pd
from datetime import datetime
import numpy as np

range_data = pd.date_range(start ='1/1/2019', end ='1/08/2019', freq ='Min')
df = pd.DataFrame(range_data, columns =['date'])
df['data'] = np.random.randint(0, 100, size =(len(range_data)))

df['datetime'] = pd.to_datetime(df['date'])
df = df.set_index('datetime')
df.drop(['date'], axis = 1, inplace = True)
print(df['2019-01-05'][1:11])

import pandas as pd

# creating a dataframe
df = pd.DataFrame({'A': ['John', 'Boby', 'Mina'],
                   'B': ['Masters', 'Graduate', 'Graduate'],
                   'C': [27, 23, 21]})
df

import pandas as pd

# creating a dataframe
df = pd.DataFrame({'A': ['John', 'Boby', 'Mina'],
                   'B': ['Masters', 'Graduate', 'Graduate'],
                   'C': [27, 23, 21]})
df
df.pivot('A', 'B', 'C')

import pandas as pd

# creating a dataframe
df = pd.DataFrame({'A': ['John', 'Boby', 'Mina'],
                   'B': ['Masters', 'Graduate', 'Graduate'],
                   'C': [27, 23, 21]})
df.pivot(index='A', columns='B', values=['C', 'A'])

import pandas as pd

# Sample DataFrame
data = {
    'Date': ['2023-01-01', '2023-01-02', '2023-01-03'],
    'Tokyo': [15, 16, 12],
    'Paris': [10, 11, 13],
    'Moscow': [5, 2, 3]
}
df = pd.DataFrame(data)
df

import pandas as pd

# Sample DataFrame
data = {
    'Date': ['2023-01-01', '2023-01-02', '2023-01-03'],
    'Tokyo': [15, 16, 12],
    'Paris': [10, 11, 13],
    'Moscow': [5, 2, 3]
}
df = pd.DataFrame(data)

# Using pivot to reshape data
pivot_df = df.pivot(index='Date', columns='City', values=['Temperature'])
print("Pivoted DataFrame:")
print(pivot_df)
df

import pandas as pd

# Example DataFrame
data = {
    'Date': ['2023-01-01', '2023-01-02', '2023-01-03'],
    'City': ['Tokyo', 'Paris', 'Moscow'],
    'Temperature': [15, 16, 12]
}
df = pd.DataFrame(data)
df
pivot_df = df.pivot(index='Date', columns='City', values=['Temperature'])
print("Pivoted DataFrame:")
print(pivot_df)
df

# Create a simple dataframe

# importing pandas as pd
import pandas as pd
import numpy as np

# creating a dataframe
df = pd.DataFrame({'A': ['John', 'Boby', 'Mina', 'Peter', 'Nicky'],
      'B': ['Masters', 'Graduate', 'Graduate', 'Masters', 'Graduate'],
      'C': [27, 23, 21, 23, 24]})

df

table = pd.pivot_table(df, index =['A', 'B'])

table

# Creates a pivot table dataframe
table = pd.pivot_table(df, values ='A', index =['B', 'C'],
                         columns =['B'], aggfunc = np.sum)

table

# Sample DataFrame
data = {
    'Date': ['2023-01-01', '2023-01-02', '2023-01-03'],
    'Tokyo': [15, 16, 12],
    'Paris': [10, 11, 13],
    'Moscow': [5, 2, 3]
}
df = pd.DataFrame(data)
# Using melt to reshape data
melted_df = df.melt(id_vars=['Date'], var_name='City', value_name='Temperature')
print("\nMelted DataFrame:")
print(melted_df)

import pandas as pd

# Example DataFrame
data = {
    'Name': ['Alice', 'Bob', 'Charlie', 'David'],
    'Age': [25, 30, 35, 40]
}
df = pd.DataFrame(data)

# Using map to apply a function to a Series
df['Age_Category'] = df['Age'].map(lambda age: 'Young' if age < 30 else 'Old')
print(df)

# Using boolean indexing to filter rows
filtered_df = df[df['Age'] < 35]
print(filtered_df)

from functools import reduce

# Applying reduce with a lambda function to get the sum of 'Age'
total_age = reduce(lambda x, y: x + y, df['Age'])
print("Total Age:", total_age)

# Using a lambda function with apply to create a new column
df['Name_Length'] = df['Name'].apply(lambda name: len(name))
print(df)

import pandas as ps
data=pd.read_csv("/content/yash.csv")
print(data)

import pandas as ps
data=pd.read_csv("/content/yy.csv")
print(data)

import pandas as pd
a=pd.Series([15,26,33,47,59])
b=pd.Series([69,70,89,90,10])
d=a[~a.isin(b)]
e=b[~b.isin(a)]
print(d)
print(e)
print(a.min())
print(a.max())
print(b.sum())
average=sum(a)/len(a)
print(average)
print(b.median())

import pandas as pd

df = pd.DataFrame([[29, 24, 28, 29],
                   [28, 10, 27, 26],
                   [72, 62, 82, 52]],
                  columns=['Maths',  'English',
                           'Science', 'History'])


print(df)

import pandas as pd
data=pd.DataFrame({
    'name':['yashoda','laxmi','sahana','muttu'],
    'maths':[98,34,56,77],
    'engish':[65,56,78,86],
    'scince':[45,56,78,90],
})
df=pd.DataFrame(data)
print(df)

filtered_data=data[data['maths'] <50]
print(filtered_data)

import pandas as pd
data = pd.DataFrame({
    'name': ['yashoda', 'laxmi', 'sahana', 'muttu'],
    'emplid': [98, 34, 56, 77],
    'salary': [199, 564, 785, 866],
    'deportdp': ['cs', 'is', 'cs', 'is']
})
df = pd.DataFrame(data)
print(df)

fromefunctools import reduce
salary=reduce(lambda x,y:x+y,df['salary'])
print (salary)

from functools import reduce
salary_sum = reduce(lambda x, y: x + y, df['salary'])
print(salary_sum)

import pandas as pd
import matplotlib.pyplot as plt

import seaborn as sns
df = pd.read_csv("/content/mtcars (3).csv")

plt.figure(figsize=(10, 6))
sns.histplot(df['mpg'], bins=10, kde=False)
plt.title('Histogram of MPG')
plt.xlabel('Miles Per Gallon (mpg)')
plt.ylabel('Frequency')
plt.grid(True)
plt.show()

plt.figure(figsize=(10, 6))
sns.scatterplot(x='wt', y='mpg', data=df)
plt.title('Scatter Plot of Car Weight vs. MPG')
plt.xlabel('Weight (1000 lbs)')
plt.ylabel('Miles Per Gallon (mpg)')
plt.grid(True)
plt.show()

plt.figure(figsize=(10, 6))
sns.countplot(x='am', data=df)
plt.title('Bar Plot of Transmission Type')
plt.xlabel('Transmission (0 = Automatic, 1 = Manual)')
plt.ylabel('Frequency')
plt.grid(True)
plt.show()


plt.figure(figsize=(10, 6))
sns.boxplot(y='mpg', data=df)
plt.title('Box and Whisker Plot of MPG')
plt.ylabel('Miles Per Gallon (mpg)')
plt.grid(True)
plt.show()

summary = df['mpg'].describe()
print("Five-number summary of mpg:")
print(summary[['min', '25%', '50%', '75%', 'max']])